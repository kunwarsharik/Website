Introduction
Preventing Computer vision syndrome
In today's era computers and smartphones have become integral part of daily life. Apart from these Television and other user friendly devices all use screens(LED,LCD etc). According to researchers any person who works on screen for regular period of 3 hrs or more (which is general) is under threat of his eyes getting damaged due to regularly focusing on a distance that our eyes are not made for (according to researches the natural distance is 20-25 feet and slightly lower angle than horizontal), this damaging of our eyes and related effects come under the term Computer vision syndrome (CVS). The problem become much more important to solve when
1. In cases of childrens of age below 10 years, they undergo this strain regularly but don't complain about it. Strain gets accumulated in their eyes across time resulting in various eye related problems. Though other factors can also be important this is one of the factor that even though both parent don't wear spectacles their child at such small age wears them.
2. The increased strain in adults is also very common mltiple surveys in universities as well as professional places show above 75% people effected by this.
CVS has both short term and long term effects. Short term are eye dryness(which itself create many eye related problems), eye fatigue, headache, reduced concentration middle term include blurry/double vision; Neck, shoulder and back pain while long term effects are depression, poor sleep quality and insomnia.
Especially people who are professional work can't stop using screens but the way of using could be changed, and it is shown that by taking certain precautions we can actually protect our eyes. In this project we implemented a solution for CVS.

Novelty and problems overcomed
1.Figuring out how to approach the problem of eyes getting damaged from using screens. the features that we decided to work with were blinking rate, distance from the screen, eye(iris) movement, angle between the eye(horizontal) and screen top, resting period.
From various researches we summarized the optimal way of working with screens and automated it via detecting deviations from optimal way which is as follows
Blinking rate normal 12-15/minute which reduce to even 4/minute.
distance from computer screen 27-33 inch.
eye movement more movement is better.
angle between eye and top of screen 15 degree.
resting period is according to 20-20-20 rule (every 20 minute look 20 feet away fro 20 seconds).
2. 68-point facial landmark detector from Dlib is used. Which give us almost accurate points for eyes, lips, nose etc. the "almost" is handled using couple of hacks when needed.
For Blinking Detection A Deep Convolution Neural Network was trained to detect open vs close eye. For both preparing dataset and afterwhile taking prediction the landmark detector is used to get eye image from complete face. Now to get accurate eye image the
points we get the angle of rotation(roll) of face. and also calculate the width of face from one eye corner to other.  
A normal blink in 15 frame per second video appear in 3 frames. Therefore to get the number of blink in 1 minute simple strategy of calculating number of blink in frames is choosen. Eye close in consequtive frames is counted as one blink. like in a blink 3 frames are with eye close similarly after blink eye appear open for couple of frame. Also there are sometimes two or more blinks consequtively they must be counted as one since the whole concept of eye blink is that blink refresh eye by coating it with layer of tear. if we take 12-15 blink they must be distributed in a minute time. Detecting frames with eye close and open fulfil such needs in our code.

Distance from screen is calculated using triangle similarity. Which require an initial measurement of object we chosed nose width for it. The nose width is measured only once and the distance it was at that moment from the screen. then the width in pixel is obtained from points of landmark detector. Using these we get focal length of camera. we store focal length and actual width of nose. Now by just geting width in pixel from landmark detector at new distance we can calculate the new distance.

The Angle from the eye(horizontal) to screen is calculated using a virtual 3d face model obtained from 2D points of landmark detector. This is implemented using Using openCV. Using this 3D model we calculate the pitch(angle).


For iris movement detection only the eye part from total face is extracted using landmark detector as in blinking and a DCNN is trained. That output the extent to which the iris movement occured.

Resting period is required to look 20 sec away or if for 20 sec no one is in front of webcam. this check is made every 20 minute. While remaining four are calculated reularly.

At last at end of particular time period a work, a day, a week your scores according to each's optimal way is given.

Contribution
dataset for Blinking, iris movement.
Models to detect Blinking, iris movement. 
Algorithm to calculate Distance of object from the screen, angle between eye (horizontal) and the screen and to check if the 20-20-20 rule is followed.


Usefulness
Untill now nobody from computer vision community has worked over such important issue. This can directly be deployed on laptops and computers with a webcam.

Limitation and Future prospective
webcam should bee in front of face (small deviation is allowed but not much).this can be overcomed by training new face landmark detector with training data including instances for side face pose also.
Can't work for smartphones. Small changes are required.

